Clear[GenerateKeysRSA]
GenerateKeysRSA[m_?NumericQ] :=
 Module[{n, e, d, p, q, \[Phi]},
  p = RandomPrime[{10^(m - 2), 10^(m - 1)}];
  q = RandomPrime[1000];
  n = p q;
  While[IntegerLength[n] != m, q = RandomPrime[100]; n = p q];
  \[Phi] = (p - 1) (q - 1);
  e = RandomPrime[{3, \[Phi] - 1}];
  d = PowerMod[e, -1, \[Phi]];
  {{n, e}, {n, d}}]

  EncodeRSA[str_?StringQ, {n_?NumberQ, e_?NumberQ}] :=
 StringJoin@
  StringPadLeft[ToString /@ PowerMod[ToCharacterCode@str, e, n], 
   IntegerLength@n, "0"]

   DecodeRSA[code_?StringQ, {n_?NumberQ, d_?NumberQ}] :=
 FromCharacterCode@
  PowerMod[ToExpression@StringPartition[code, IntegerLength@n], d, n]
