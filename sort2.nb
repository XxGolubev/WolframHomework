HeapSort[a_ : {___?NumberQ}] :=
 Module[{s, sortArray, i},
  s = BuildBinaryHeap[a];
  sortArray = Table[0, Length@s];
  i = Length@s;
  For[i, i > 1, i--,
   sortArray[[i]] = s[[1]];
   s = DeleteFirstBinaryHeap[s];
   ];
  sortArray[[1]] = s[[1]];
  sortArray]


QuickSort[{}] := {}
QuickSort[a___] :=
 Module[{s, el, less, more},
  s = a;
  el = s[[1]];
  less = Select[s, # <= el &];
  more = Select[s, # > el &];
  Join[QuickSort[less], {el}, QuickSort[more]]]

  merge[left_?VectorQ, right_?VectorQ] :=
 Module[{result = {}, i = 1, j = 1},
  While[i <= Length[left] \[And] j <= Length[right],
   If[left[[i]] <= right[[j]],
    AppendTo[result, left[[i]]]; i++,
    AppendTo[result, right[[j]]]; j++]];
  While[i <= Length[left], AppendTo[result, left[[i]]]; i++];
  While[j <= Length[right], AppendTo[result, right[[j]]]; j++];
  result]


MergeSort[array_List] :=
 If[Length[array] <= 1,
  array, Module[{mid = Quotient[Length[array], 2]},
   merge[MergeSort[array[[;; mid]]], MergeSort[array[[mid + 1 ;;]]]]]]
